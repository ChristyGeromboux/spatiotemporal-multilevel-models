{
    "collab_server" : "",
    "contents" : "#### name: multilevel model with varying intercepts and varying slopes ####\nlibrary(lme4)\ndat <- read.csv(\"data/simulated_data.csv\")\n# step one: exploratory work\nstr(dat)\nsummary(dat)\nplot(dat$x, dat$y)\nplot(dat$z, dat$y)\nplot(density(dat$y))\n\nfit0 <- lm(y ~ x, data = dat)\nsummary(fit0)\nfit0cf <- coefficients(fit0)\nwith(dat, plot(x, y, col = z))\n\nabline(fit0cf[1], fit0cf[2])\n\n# step 2: we suspect a group level effect! begin to build multilevel model(s)\n# first lets set up a nice plot\nmy_plot <- function(dat){\n\n  par(mar = c(3,3,2,1))\n  plot(1, type=\"n\", xlim=c(-0.3,6), ylim=c(-1,0.5), xlab=\"\", ylab=\"\", axes = F)\n  axis(1, labels = F); axis(2, labels = F)\n  mtext(\"Y\", 2, 1 , at = 0, las = 2)\n  mtext(\"X\", 1, 1 , at = 3)\n  \n  with(subset(dat, z == \"group1\"), points(x, y,  pch = 1, cex = .5))\n  with(subset(dat, z == \"group2\"), points(x, y, pch = 3, cex = .5))\n  with(subset(dat, z == \"group3\"), points(x, y, pch = 4, cex = 1.5, col = 'darkgreen'))\n\n}\n\nmy_plot(dat)\n#dev.off()\n\n#  model 1: OLS with unvarying intercept and slope (fixed) \nfit <- lm(y~x, data = dat)\nsummary(fit)\nabline(fit, lwd = 2, lty = 2)\n\n# model 2: varying intercept (random) and unvarying slope (fixed)\nmy_plot(dat)\nfit2  <- lm(y ~ x + z, data = dat)\nsummary(fit2)\n# we know this is put together in a linear equation thus:\ntitle(expression(paste(\"Regression model Y = \", beta[0] + beta[1],\"X + \", beta[2], \"Z + \", epsilon )))\n\n# so create a coeffs object\nfit2cf <- coefficients(fit2)\n\n# now we can extract the betas\nb0   <- fit2cf[1]\nb1   <- fit2cf[2]\nb2.1 <- fit2cf[3]\nb2.2 <- fit2cf[4]\n\n# and show the linear fits\nabline(b0, b1)\nabline(b0+b2.1, b1)\nabline(b0+b2.2, b1)\n\n# TODO maybe stop to talk about the tests of 'if group makes a difference?' here, which justify going the next\n\n#######################################################################################\n#### model 3: LM approach to varying intercept (random) and varying slope (random) ####\n#######################################################################################\n# clear out the plot\nmy_plot(dat)\nfit3  <- lm(y ~ x * z, data = dat)\nsummary(fit3)\n\n# this is a different equation\ntitle(expression(paste(\"Regression model Y = \", beta[0] + beta[1],\"X + \", beta[2], \"Z + \", beta[3], \"XZ + \", epsilon )))\n\n# there is a trick to make this less work with getting se around multiplicative interaction terms... for lesson 3!\n# x1 <- ifelse(dat$z == 'group1', x, 0)\n# x2 <- ifelse(dat$z == 'group2', x, 0)\n# x3 <- ifelse(dat$z == 'group3', x, 0)\n# \n# fit3 <- lm(y ~ z + x1 + x2 + x3, data = dat)\n# summary(fit3)\nfit3cf <- coefficients(fit3)\nb0   <- fit3cf[1]\nb1   <- fit3cf[2]\nb2.1 <- fit3cf[3]\nb2.2 <- fit3cf[4]\nb3.1 <- fit3cf[5]\nb3.2 <- fit3cf[6]\n\nabline(b0, b1)\nabline(b0+b2.1, b1+b3.1)\nabline(b0+b2.2, b1+b3.2, col = 'darkgreen')\n\n# at this point may expect a question about change in X = estimated change in Y for each\n\n######################################################################################################\n#### model 5 is linear mixed effects regression (lmer) with varying intercept and unvarying slope ####\n######################################################################################################\nmy_plot(dat)\n# all the tutes I read said to start with a 'null' random intercepts model\nfitnull <- lmer(y ~ (1|z), data = dat)\nsummary(fitnull)\nrandom <- ranef(fitnull)\nfixed <- fixef(fitnull)\ngamma1 <- fixed[1] + random[[1]][1,1]  # this is beta0 + mu0 where Z = group1\ngamma2 <- fixed[1] + random[[1]][2,1]  # this is beta0 + mu0 where Z = group2\ngamma3 <- fixed[1] + random[[1]][3,1]  # this is beta0 + mu0 where Z = group3\n\nabline(gamma1, 0, col = 'red', lty = 'dashed')\nabline(gamma2, 0, col = 'red', lty = 'dashed')\nabline(gamma3, 0, col = 'red', lty = 'dashed')\n\n# versus the LM version\nfitnull1 <- lm(y ~ 1 + z, data = dat)\nsummary(fitnull1)\n\n\n# but we know we have slopes so lets get going\nmy_plot(dat)\nfit5 <- lmer(y ~ x + (1|z), data = dat)\nsummary(fit5)\n\ntitle(expression(paste(\"Regression model Y = \", beta[0] + beta[1],\"X + (\", mu[0], \"Z + \", epsilon, \")\")))\n\n# we can extract the components thus\nrandom <- ranef(fit5)\nrandom\nfixed <- fixef(fit5)\nfixed\n\ngamma1 <- fixed[1] + random[[1]][1,1]  # this is beta0 + mu0 where Z = group1\ngamma2 <- fixed[1] + random[[1]][2,1]  # this is beta0 + mu0 where Z = group2\ngamma3 <- fixed[1] + random[[1]][3,1]  # this is beta0 + mu0 where Z = group3\nbeta_x <- unlist(fixed)[2]\n\nabline(gamma1, beta_x, col = 'red', lty = 'dashed')\nabline(gamma2, beta_x, col = 'red', lty = 'dashed')\nabline(gamma3, beta_x, col = 'red', lty = 'dashed')\n\n# model 6  is lmer with varying intercept and varying slope\nmy_plot(dat)\nfit6 <- lmer(y ~ x + (1 + x |z), data = dat)\nsummary(fit6)\n\ntitle(expression(paste(\"Regression model Y = \", beta[0] + beta[1],\"X + (\", mu[0], \"Z + \", mu[1], \"X + \", epsilon, \")\")))\n\nrandom <- ranef(fit6)\nrandom\nfixed <- fixef(fit6)\nfixed\n\ngamma1 <- fixed[1] + random[[1]][1,1]\ngamma2 <- fixed[1] + random[[1]][2,1]\ngamma3 <- fixed[1] + random[[1]][3,1]\nbeta_x1 <- fixed[2] + random[[1]][1,2]\nbeta_x2 <- fixed[2] + random[[1]][2,2]\nbeta_x3 <- fixed[2] + random[[1]][2,2]\n\nabline(gamma1, beta_x1, col = 'red', lty = 'dashed')\nabline(gamma2, beta_x2, col = 'red', lty = 'dashed')\nabline(gamma3, beta_x3, col = 'red', lty = 'dashed')\n\n\n\n",
    "created" : 1462940688187.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "515147352",
    "id" : "96F73299",
    "lastKnownWriteTime" : 1463721175,
    "last_content_update" : 1463721175921,
    "path" : "~/projects/multilevel-basics/after_brambor.R",
    "project_path" : "after_brambor.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}